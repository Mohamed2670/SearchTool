// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SearchTool_ServerSide.Data;

#nullable disable

namespace SearchTool_ServerSide.Migrations
{
    [DbContext(typeof(SearchToolDBContext))]
    [Migration("20250203134343_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SearchTool_ServerSide.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ACQ")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AWP")
                        .HasColumnType("numeric");

                    b.Property<int>("ClassId")
                        .HasColumnType("integer");

                    b.Property<int?>("DrugClassId")
                        .HasColumnType("integer");

                    b.Property<string>("Form")
                        .HasColumnType("text");

                    b.Property<string>("NDC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rxcui")
                        .HasColumnType("integer");

                    b.Property<string>("Strength")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DrugClassId");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.DrugClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DrugClasses");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.DrugInsurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .HasColumnType("integer");

                    b.Property<int>("DrugId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("NDCCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InsuranceId", "DrugId");

                    b.HasIndex("DrugId");

                    b.ToTable("DrugInsurances");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.ScriptItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int>("DrugInsuranceDrugId")
                        .HasColumnType("integer");

                    b.Property<int>("DrugInsuranceId")
                        .HasColumnType("integer");

                    b.Property<int>("DrugInsuranceInsuranceId")
                        .HasColumnType("integer");

                    b.Property<decimal>("InsurancePay")
                        .HasColumnType("numeric");

                    b.Property<string>("NDCCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Net")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PatientPay")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ScriptId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId");

                    b.HasIndex("DrugInsuranceInsuranceId", "DrugInsuranceDrugId");

                    b.ToTable("ScriptItems");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServerSide.Models.Script", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ScriptCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.Drug", b =>
                {
                    b.HasOne("SearchTool_ServerSide.Models.DrugClass", "DrugClass")
                        .WithMany()
                        .HasForeignKey("DrugClassId");

                    b.Navigation("DrugClass");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.DrugInsurance", b =>
                {
                    b.HasOne("SearchTool_ServerSide.Models.Drug", "Drug")
                        .WithMany()
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SearchTool_ServerSide.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drug");

                    b.Navigation("Insurance");
                });

            modelBuilder.Entity("SearchTool_ServerSide.Models.ScriptItem", b =>
                {
                    b.HasOne("ServerSide.Models.Script", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SearchTool_ServerSide.Models.DrugInsurance", "DrugInsurance")
                        .WithMany()
                        .HasForeignKey("DrugInsuranceInsuranceId", "DrugInsuranceDrugId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrugInsurance");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("ServerSide.Models.Script", b =>
                {
                    b.HasOne("SearchTool_ServerSide.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
